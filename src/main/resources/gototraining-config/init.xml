<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="init" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="accessToken" description="OAuth access Token to access the GoTo training API through the App."/>
    <parameter name="organizerKey" description="Key of the owner (organizer) of the GoTo Account on whose behalf trainings are handled."/>
    <parameter name="apiUrl" description="Base endpoint URL of the GoTo Training API."/>
    <parameter name="grantType" description="Type of grant used to get the Access Token. Defaults to 'password'"/>
    <parameter name="userId" description="Email address used to sign up to the GoTo Training account."/>
    <parameter name="password" description="Password used to sign in to the GoTo Training account."/>
    <parameter name="clientId" description="Application client_id (i.e. API key)"/>
    <parameter name="apiUrl" description="Base endpoint URL of the GoTo Training API."/>
    <sequence>
        <property name="uri.var.accessToken" expression="$func:accessToken"/>
        <property name="uri.var.organizerKey" expression="$func:organizerKey"/>
        <property name="uri.var.grantType" expression="$func:grantType"/>
        <property name="uri.var.userId" expression="$func:userId"/>
        <property name="uri.var.password" expression="$func:password"/>
        <property name="uri.var.clientId" expression="$func:clientId"/>
        <property name="uri.var.apiUrl" expression="$func:apiUrl"/>

        <filter source="boolean(get-property('uri.var.apiUrl'))" regex="false">
            <then>
                <property name="uri.var.apiUrl" value="https://api.getgo.com"/>
            </then>
        </filter>

        <!--If the user provides the userId, clientId and password in the request then the accessToken and the organizerKey should be retrieved from the API using them.-->
        <filter source="boolean(get-property('uri.var.userId')) and boolean(get-property('uri.var.clientId')) and boolean(get-property('uri.var.password'))" regex="true">
            <then>			
                <filter source="boolean(get-property('uri.var.grantType'))" regex="false">
                    <then>
                        <property name="uri.var.grantType" value="password"/>
                    </then>
                </filter>

                <call>
                    <endpoint>
                        <http method="get" uri-template="{uri.var.apiUrl}/oauth/access_token?grant_type={uri.var.grantType}&amp;client_id={uri.var.clientId}&amp;user_id={uri.var.userId}&amp;password={uri.var.password}"/>
                    </endpoint>
                </call>

                <!--Assign values from the Call Response-->
                <property name="uri.var.organizerKey" expression="json-eval($.organizer_key)"/>
                <property name="uri.var.accessToken" expression="json-eval($.access_token)"/>

                <!-- Remove custom Headers from the API Response -->
                <header name="Access-Control-Allow-Headers" action="remove" scope="transport"/>
                <header name="Access-Control-Allow-Methods" action="remove" scope="transport"/>
                <header name="Access-Control-Allow-Origin" action="remove" scope="transport"/>
                <header name="Access-Control-Max-Age" action="remove" scope="transport"/>
            </then>
        </filter>

        <property name="uri.var.apiUrl" expression="fn:concat(get-property('uri.var.apiUrl'), '/G2T/rest')"/>
        <header name="Authorization" expression="$ctx:uri.var.accessToken" scope="transport"/>

    </sequence>
</template>